{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","url","movie","imgUrl","description","imdbUrl","className","src","includes","trim","alt","title","href","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","value","setValue","foundMovie","setFoundMovie","isLoading","setIsLoading","hasError","setHasError","reset","useMemo","htmlFor","type","id","placeholder","onChange","e","target","classNames","disabled","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","result","response","Title","Plot","Poster","imdbID","normoliseData","finally","find","currentMovies","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38edbbb8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const defaultPoster = `\n    https://via.placeholder.com/360x270.png?text=no%20preview\n  `;\n\n  const setPosterUrl = (url: string) => (url.includes('https')\n    ? url : defaultPoster.trim());\n\n  const { imgUrl, description, imdbUrl } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={setPosterUrl(imgUrl)}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [value, setValue] = useState<string>('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasError, setHasError] = useState(false);\n\n  const normoliseData = ({\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  }: MovieData) => ({\n    title: Title,\n    description: Plot,\n    imgUrl: Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  });\n\n  const handleResult = (response: MovieData | ResponseError) => {\n    if ('Error' in response) {\n      setHasError(true);\n    } else {\n      setFoundMovie(normoliseData(response));\n    }\n  };\n\n  const reset = () => {\n    setFoundMovie(null);\n    setValue('');\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setValue(e.target.value);\n  };\n\n  const handleClickFind = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(value)\n      .then((result) => handleResult(result))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleClickAdd = () => {\n    if (!foundMovie) {\n      return;\n    }\n\n    const copy = movies.find((movie) => movie.imdbId === foundMovie.imdbId);\n\n    if (copy) {\n      reset();\n\n      return;\n    }\n\n    setMovies((currentMovies: Movie[]) => [\n      ...currentMovies,\n      foundMovie,\n    ]);\n  };\n\n  useMemo(() => reset(), [movies]);\n\n  useMemo(() => setHasError(false), [value]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={value}\n              onChange={handleChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!value}\n              onClick={handleClickFind}\n            >\n              {foundMovie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleClickAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c3366dba';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}